{"ast":null,"code":"var _jsxFileName = \"/home/qian/p1_unicafe/src/App_1.10.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Give Feedback\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 21\n}, this);\n_c = Header;\nconst Header2 = () => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"statistics\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 21\n}, this);\n_c2 = Header2;\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c3 = Button;\nconst StatisticLine = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.text, props.value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 32\n}, this);\n_c4 = StatisticLine;\nconst Sta = props => {\n  if (props.clicks === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 1\n  }, this);\n};\n_c5 = Sta;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [allClicks, setAll] = useState(0);\n  const handleGood = () => {\n    setGood(good + 1);\n    setAll(allClicks + 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(allClicks + 1);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAll(allClicks + 1);\n  };\n  const total = good + neutral + bad;\n  const average = (good - bad) / total * 100;\n  const positive = good / total * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Sta, {\n      clicks: allClicks,\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      total: total,\n      average: average.toFixed(2),\n      positive: positive.toFixed(2) + '%'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Y+zgB1eS7dcXb50wMVmV7ZHJ2UI=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Header2\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"StatisticLine\");\n$RefreshReg$(_c5, \"Sta\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Header","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Header2","_c2","Button","_ref","handleClick","text","onClick","_c3","StatisticLine","props","value","_c4","Sta","clicks","good","neutral","bad","total","average","positive","_c5","App","_s","setGood","setNeutral","setBad","allClicks","setAll","handleGood","handleNeutral","handleBad","toFixed","_c6","$RefreshReg$"],"sources":["/home/qian/p1_unicafe/src/App_1.10.js"],"sourcesContent":["import { useState } from 'react'\nconst Header =() => <h1>Give Feedback</h1>\n\nconst Header2 =()=> <h1>statistics</h1>\n\nconst Button =({handleClick,text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n  )\n\nconst StatisticLine =(props)=> <p>{props.text}{props.value}</p>\n\nconst Sta =(props)=>{\n\nif (props.clicks ===0 ){\n  return(\n    <div>No feedback given</div>\n  )\n}\nreturn(\n<div>\n      <StatisticLine text=\"good\" value ={good} />\n      <StatisticLine text=\"neutral\" value ={neutral} />\n      <StatisticLine text=\"bad\" value ={bad} />\n      <StatisticLine text=\"all\" value ={total} />\n      <StatisticLine text=\"average\" value ={average} />\n      <StatisticLine text=\"positive\" value ={positive} />\n</div>\n)\n}\n\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const [allClicks, setAll] = useState(0)\n\n  const handleGood = ()=> {\n    setGood(good+1) \n    setAll(allClicks+1)\n  }\n\n  const handleNeutral = ()=> {\n    setNeutral(neutral+1)\n    setAll(allClicks+1)\n  }\n  const handleBad = ()=> {\n    setBad(bad+1)\n    setAll(allClicks+1)\n  }\n\n\n  const total = good + neutral + bad;\n  const average = ((good - bad) / total) * 100;\n  const positive = (good / total) * 100;\n\n  return (\n    <div>\n    <Header />\n    <Button handleClick={handleGood} text= 'good' />\n    <Button handleClick={handleNeutral} text= 'Neutral' />\n    <Button handleClick={handleBad} text= 'Bad' />\n    <Header2 />\n    <Sta clicks={allClicks} good={good} neutral={neutral} bad={bad} total={total} average={average.toFixed(2)} positive={positive.toFixed(2) + '%'}/>\n    </div>\n  )\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}