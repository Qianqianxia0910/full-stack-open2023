{"ast":null,"code":"var _jsxFileName = \"/home/qian/p2_courseinfo/src/App_2.4.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Course = _ref => {\n  let {\n    coursename,\n    courseid\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: coursename\n  }, courseid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 42\n  }, this);\n};\n_c = Course;\nconst Header = _ref2 => {\n  let {\n    courses\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n      coursename: courses.name\n    }, courses.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 29\n    }, this))\n  }, void 0, false);\n};\n\n// const Part = ({partname,partexercise,id})=> <li key={id}>{partname} {partexercise}</li>\n\n// const Content = ({parts}) =>{\n//   return(\n//     <>\n//     {parts.map((part => <Part partname={part.name} partexercise={part.exercises} key={part.id}/>))}\n//     </>\n//   )\n// }\n\n// const Total = ({parts}) =>{\n//   return <div>total of {parts.reduce((sum,part) => sum+part.exercises,0)} exercises </div>\n// }\n_c2 = Header;\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n\n  // var ex =[]\n  // for(var i=0; i<courses.parts.length; i++){\n  //   ex.push(courses.parts[i].exercises)\n  // }\n  // console.log(\"ex\",ex)\n\n  // var sum = courses.parts.map(function(part) {return part.exercises})\n  // console.log(\"sum\",sum)\n\n  // // arrow function version\n  // var sum2 = courses.parts.map(part => part.exercises)\n  // console.log(\"sum2\",sum2)\n\n  //   var totalAmount = 0\n  //   for (var i=0; i<courses.parts.length; i++) {\n  //     totalAmount += courses.parts[i].exercises\n  //   }\n  //   console.log(\"totalAmount\",totalAmount)\n\n  //   var partsArray = courses.parts\n  //   var totalAmount2 = partsArray.reduce(function(sum,part){\n  //     console.log(\"hello\",sum,part)\n  //     return sum+part.exercises},0)\n  //   console.log(totalAmount2)\n\n  //   //arrow function version\n  //  var totalAmount3 = partsArray.reduce((sum,part)=> sum+part.exercises,0)\n  //  console.log(\"3:\",totalAmount3)\n  console.log(\"hello\", course);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      courses: courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Course","_ref","coursename","courseid","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Header","_ref2","courses","map","course","name","id","_c2","App","parts","exercises","console","log","_c3","$RefreshReg$"],"sources":["/home/qian/p2_courseinfo/src/App_2.4.js"],"sourcesContent":["import React from \"react\";\n\nconst Course = ({coursename,courseid})=> <li key={courseid}>{coursename}</li>\nconst Header = ({courses}) => {\n  return(\n    <>\n    {courses.map((course => <Course key={courses.id} coursename={courses.name} />))}\n    </>\n  )\n}\n\n\n\n// const Part = ({partname,partexercise,id})=> <li key={id}>{partname} {partexercise}</li>\n\n// const Content = ({parts}) =>{\n//   return(\n//     <>\n//     {parts.map((part => <Part partname={part.name} partexercise={part.exercises} key={part.id}/>))}\n//     </>\n//   )\n// }\n\n// const Total = ({parts}) =>{\n//   return <div>total of {parts.reduce((sum,part) => sum+part.exercises,0)} exercises </div>\n// }\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    },\n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  // var ex =[]\n  // for(var i=0; i<courses.parts.length; i++){\n  //   ex.push(courses.parts[i].exercises)\n  // }\n  // console.log(\"ex\",ex)\n\n  // var sum = courses.parts.map(function(part) {return part.exercises})\n  // console.log(\"sum\",sum)\n\n  // // arrow function version\n  // var sum2 = courses.parts.map(part => part.exercises)\n  // console.log(\"sum2\",sum2)\n\n//   var totalAmount = 0\n//   for (var i=0; i<courses.parts.length; i++) {\n//     totalAmount += courses.parts[i].exercises\n//   }\n//   console.log(\"totalAmount\",totalAmount)\n\n\n//   var partsArray = courses.parts\n//   var totalAmount2 = partsArray.reduce(function(sum,part){\n//     console.log(\"hello\",sum,part)\n//     return sum+part.exercises},0)\n//   console.log(totalAmount2)\n\n//   //arrow function version\n//  var totalAmount3 = partsArray.reduce((sum,part)=> sum+part.exercises,0)\n//  console.log(\"3:\",totalAmount3)\n  console.log(\"hello\",course)\n  return (\n    <>\n      <Header courses={courses}/>\n\n    </>\n  );\n};\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,MAAM,GAAGC,IAAA;EAAA,IAAC;IAACC,UAAU;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAAA,oBAAIJ,OAAA;IAAAO,QAAA,EAAoBF;EAAU,GAArBC,QAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB,CAAC;AAAA;AAAAC,EAAA,GAAvET,MAAM;AACZ,MAAMU,MAAM,GAAGC,KAAA,IAAe;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAD,KAAA;EACvB,oBACEd,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACCQ,OAAO,CAACC,GAAG,CAAEC,MAAM,iBAAIjB,OAAA,CAACG,MAAM;MAAkBE,UAAU,EAAEU,OAAO,CAACG;IAAK,GAArCH,OAAO,CAACI,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6B,CAAE;EAAC,gBAC7E,CAAC;AAEP,CAAC;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAAS,GAAA,GAtBMP,MAAM;AAwBZ,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMN,OAAO,GAAG,CACd;IACEG,IAAI,EAAE,oCAAoC;IAC1CC,EAAE,EAAE,CAAC;IACLG,KAAK,EAAE,CACL;MACEJ,IAAI,EAAE,uBAAuB;MAC7BK,SAAS,EAAE,EAAE;MACbJ,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,0BAA0B;MAChCK,SAAS,EAAE,CAAC;MACZJ,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,sBAAsB;MAC5BK,SAAS,EAAE,EAAE;MACbJ,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,OAAO;MACbK,SAAS,EAAE,EAAE;MACbJ,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,EAAE,EAAE,CAAC;IACLG,KAAK,EAAE,CACL;MACEJ,IAAI,EAAE,SAAS;MACfK,SAAS,EAAE,CAAC;MACZJ,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,aAAa;MACnBK,SAAS,EAAE,CAAC;MACZJ,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,CACF;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEF;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACEK,OAAO,CAACC,GAAG,CAAC,OAAO,EAACR,MAAM,CAAC;EAC3B,oBACEjB,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACa,MAAM;MAACE,OAAO,EAAEA;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAE3B,CAAC;AAEP,CAAC;AAACe,GAAA,GAlFIL,GAAG;AAoFT,eAAeA,GAAG;AAAC,IAAAT,EAAA,EAAAQ,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}