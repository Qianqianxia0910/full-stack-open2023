{"ast":null,"code":"var _jsxFileName = \"/home/qian/p2_courseinfo/src/App_2.4.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Course = _ref => {\n  let {\n    coursename,\n    courseid\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: coursename\n  }, courseid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 42\n  }, this);\n};\n_c = Course;\nconst Total = _ref2 => {\n  let {\n    parts,\n    partid\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [\"total of \", parts.reduce((sum, part) => sum + part.exercises, 0), \" exercises \"]\n  }, partid, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Total;\nconst Header1 = _ref3 => {\n  let {\n    courses\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n      coursename: course.name\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 28\n    }, this))\n  }, void 0, false);\n};\n_c3 = Header1;\nconst Header2 = _ref4 => {\n  let {\n    courses\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }, this))\n  }, void 0, false);\n};\n_c4 = Header2;\nconst Part = _ref5 => {\n  let {\n    partname,\n    partexercise,\n    id\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [partname, \" \", partexercise]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 45\n  }, this);\n};\n_c5 = Part;\nconst Content = _ref6 => {\n  let {\n    courses\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(Part, {\n      partname: course.parts.name,\n      partexercise: course.parts.exercises\n    }, course.parts.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 28\n    }, this))\n  }, void 0, false);\n};\n_c6 = Content;\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n\n  // var ex =[]\n  // for(var i=0; i<courses.parts.length; i++){\n  //   ex.push(courses.parts[i].exercises)\n  // }\n  // console.log(\"ex\",ex)\n\n  // var sum = courses.parts.map(function(part) {return part.exercises})\n  // console.log(\"sum\",sum)\n\n  // // arrow function version\n  // var sum2 = courses.parts.map(part => part.exercises)\n  // console.log(\"sum2\",sum2)\n\n  //   var totalAmount = 0\n  //   for (var i=0; i<courses.parts.length; i++) {\n  //     totalAmount += courses.parts[i].exercises\n  //   }\n  //   console.log(\"totalAmount\",totalAmount)\n\n  //   var partsArray = courses.parts\n  //   var totalAmount2 = partsArray.reduce(function(sum,part){\n  //     console.log(\"hello\",sum,part)\n  //     return sum+part.exercises},0)\n  //   console.log(totalAmount2)\n\n  //   //arrow function version\n  //  var totalAmount3 = partsArray.reduce((sum,part)=> sum+part.exercises,0)\n  //  console.log(\"3:\",totalAmount3)\n  // const result = courses.map(note => note.id)\n  // console.log(\"result\",result)\n  // const result = courses.map(courses=>courses.parts,courses.id)\n  // console.log(\"result\",result)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header1, {\n      courses: courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header2, {\n      courses: courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      course: courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Total\");\n$RefreshReg$(_c3, \"Header1\");\n$RefreshReg$(_c4, \"Header2\");\n$RefreshReg$(_c5, \"Part\");\n$RefreshReg$(_c6, \"Content\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Course","_ref","coursename","courseid","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Total","_ref2","parts","partid","reduce","sum","part","exercises","_c2","Header1","_ref3","courses","map","course","name","id","_c3","Header2","_ref4","_c4","Part","_ref5","partname","partexercise","_c5","Content","_ref6","_c6","App","_c7","$RefreshReg$"],"sources":["/home/qian/p2_courseinfo/src/App_2.4.js"],"sourcesContent":["import React from \"react\";\n\nconst Course = ({coursename,courseid})=> <h1 key={courseid}>{coursename}</h1>\n\nconst Total = ({parts,partid}) =>{\n  return <h2 key={partid}>total of {parts.reduce((sum,part) => sum+part.exercises,0)} exercises </h2>\n}\n\nconst Header1 = ({courses}) => {\n  return(\n    <>\n    {courses.map(course => <Course key={course.id} coursename={course.name} />)}\n    </>\n  )\n}\n\nconst Header2 = ({courses}) => {\n  return(\n    <>\n    {courses.map(course => <Total key={course.id} parts={course.parts}/>)}\n    </>\n  )\n}\n\nconst Part = ({partname,partexercise,id})=> <li key={id}>{partname} {partexercise}</li>\n\nconst Content = ({courses}) =>{\n  return(\n    <>\n    {courses.map(course => <Part key ={course.parts.id} partname={course.parts.name} partexercise={course.parts.exercises} />)}\n    </>\n  )\n}\n\n\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    },\n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  // var ex =[]\n  // for(var i=0; i<courses.parts.length; i++){\n  //   ex.push(courses.parts[i].exercises)\n  // }\n  // console.log(\"ex\",ex)\n\n  // var sum = courses.parts.map(function(part) {return part.exercises})\n  // console.log(\"sum\",sum)\n\n  // // arrow function version\n  // var sum2 = courses.parts.map(part => part.exercises)\n  // console.log(\"sum2\",sum2)\n\n//   var totalAmount = 0\n//   for (var i=0; i<courses.parts.length; i++) {\n//     totalAmount += courses.parts[i].exercises\n//   }\n//   console.log(\"totalAmount\",totalAmount)\n\n\n//   var partsArray = courses.parts\n//   var totalAmount2 = partsArray.reduce(function(sum,part){\n//     console.log(\"hello\",sum,part)\n//     return sum+part.exercises},0)\n//   console.log(totalAmount2)\n\n//   //arrow function version\n//  var totalAmount3 = partsArray.reduce((sum,part)=> sum+part.exercises,0)\n//  console.log(\"3:\",totalAmount3)\n// const result = courses.map(note => note.id)\n// console.log(\"result\",result)\n// const result = courses.map(courses=>courses.parts,courses.id)\n// console.log(\"result\",result)\n  return (\n    <>\n      <Header1 courses={courses}/>\n      <Header2 courses={courses}/>\n      <Content course={courses}/>\n    </>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}